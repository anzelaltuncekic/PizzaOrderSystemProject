# -*- coding: utf-8 -*-
"""PizzaOrderSystemProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14LBdTzajRwHFGMDh5Z0wnkI-km8X-9MI

**1. Creating a Google Colaboratory File**

* Make sure your project has .ipynb extension.
* Make sure that there are comment lines explaining the details in your project.
* When submitting the project, submit the cells of this .ipynb file so that the cells are
run and the results are visible

**2. Importing Required Libraries**
* Import csv and datetime libraries
"""

#Import the libraries you will use
import csv
import datetime

"""**3. Create “Menu.txt”**
* Create a file named Menu.txt and write the following text in it.
Please Choose a Pizza Base:
1: Classic
2: Margherita
3: TurkPizza
4: PlainPizza
and sauce of your choice:
11: Olives
12: Mushrooms
13: GoatCheese
14: Meat
15: Onions
16: Corn
* Thank you!

"""

#Create a file named Menu.txt and write menu items
with open("Menu.txt", "w") as f:
    f.write(" Please Choose a Pizza Base: \n")
    f.write("1. Classic - $5.99\n")
    f.write("2. Margherita - $7.99\n")
    f.write("3. TurkPizza - $4.99\n")
    f.write("4. PlainPizza - $6.99\n")
    f.write(" and sauce of your choice: \n")
    f.write("11: Olives - $1.99\n")
    f.write("12. Mushrooms - $3.99\n")
    f.write("13. GoatCheese - $4.99\n")
    f.write("14. Meat - $6.99\n")
    f.write("15. Onions - $3.99\n")
    f.write("16. Corn - $2.99\n")
    f.write("Thank you for choosing us !\n")

"""**5. Create subclass “pizza”**
* Classic, Margherita, Turk Pizza, Dominos Pizza. Create pizza classes. Since each of
these pizza types is a type of pizza, these classes will be defined as subclasses.
* Don't forget that each pizza must have its own price and description of the
pizzas as variables.

"""

#Create the pizza class and subclasses of the pizza class 
class Pizza:
    def __init__(self, description, cost):
        self.description = description
        self.cost = cost
        
    def get_description(self):
        return self.description
        
    def get_cost(self):
        return self.cost

#Classic Pizza Subclass
class ClassicPizza(Pizza):
    def __init__(self):
        super().__init__("Classic Pizza", 5.99)
        
#Margerita Pizza Subclass
class MargheritaPizza(Pizza):
    def __init__(self):
        super().__init__("Margherita Pizza", 7.99)
        
#Türk Pizza Subclass
class TurkPizza(Pizza):
    def __init__(self):
        super().__init__("Turk Pizza", 4.99)
        
#PlainPizza Subclass
class PlainPizza(Pizza):
    def __init__(self):
        super().__init__("Plain Pizza", 6.99)

"""**6. Create superclass “Decorator”**
* Create a decorator class. Decorator is called super class of all sauce classes here.
* The decorator class will use the get_description() and get_cost() methods using the
properties of the pizza class. Complete the decorator class using the following
methods.

def get_cost(self):
    return self.component.get_cost() +  Pizza.get_cost(self)

def get_description(self):
    return self.component.get_description() +' ' + Pizza.get_description(self)

* Determine Olives, Mushrooms, Goat Cheese, Meat, Onions, and Corn as sauces,
and define each of the sauces you have determined as a class.
* Don't forget that each sauce must have its own price and description of the
pizzas as variables.

"""

#Create the decorator class
class Sauce(Pizza): 
    def __init__(self, pizza):
        self.pizza = pizza
        
    def get_description(self):
        return self.component.get_description() 
    
    def get_cost(self):
        return self.pizza.get_cost()

#Define each of the sauces
#Olive Sauce Subclass
class Olives(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Olives Sauce"
        self._price = 1.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

#Mushrooms Sauce Subclass
class Mushrooms(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Mushrooms Sauce"
        self._price = 3.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

#Goat Cheese Sauce Subclass
class GoatCheese(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Goat Cheese Sauce"
        self._price = 4.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

#Meat Sauce Subclass
class Meat(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Meat Sauce"
        self._price = 6.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

#Onions Sauce Subclass
class Onions(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Onions Sauce"
        self._price = 3.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

#Corn Sauce Subclass
class Corn(Sauce):
    def __init__(self, pizza):
        super().__init__(pizza)
        self._description = "Corn Sauce"
        self._price = 2.99
        self._pizza = pizza
    
    def get_description(self):
        return self._pizza.get_description() + ", " + self._description
    
    def get_cost(self):
        return self._pizza.get_cost() + self._price

"""* Create a main function. This function will print the menu on the screen first. Then let
the user choose a pizza and sauce from the menu. After calculating the total price of
the selected products, it should ask the user for a name, ID number, credit card
number and credit card password. with all required information
* Calculate the payments of the people who choose their pizza and keep the user's
name, user id, credit card information, description of order, time order and credit card
password in the "Orders_Database.csv" file, which we call the database.
"""

def main():
    # Define the menu
    classic_pizza = ClassicPizza()
    margherita_pizza = MargheritaPizza()
    turk_pizza = TurkPizza()
    plain_pizza = PlainPizza()
    
    sauces = {
        "Olives": Olives,
        "Mushrooms": Mushrooms,
        "Goat Cheese": GoatCheese,
        "Meat": Meat,
        "Onions": Onions,
        "Corn": Corn
    }
    
    #Print the menu
    with open("Menu.txt", "r") as f:
      menu_contents = f.read()
      print(menu_contents)
    
    #Get the user's pizza choice
    pizza_choice = input("Please choose a pizza (1-4): ")
    pizza_choice = float(pizza_choice)
    
    #Get the user's sauce choice
    sauce_choice = input("Please choose a sauce (11-16): ")
    sauce_choice = float(sauce_choice)
    
    #Create the pizza and sauce choices based on the user's choice
    #Create a dictionary for user pizza choice input.
    input_to_pizza = {
     1:classic_pizza,
     2:margherita_pizza,
     3:turk_pizza,
     4:plain_pizza}

    if pizza_choice in input_to_pizza.keys():
      pizza = input_to_pizza[pizza_choice]
    else:
      print('Please enter the number between 1 and 4')
    
    #Create a dictionary for user sauce choice input.
    input_to_sauce = {
     11:Olives,
     12:Mushrooms,
     13:GoatCheese,
     14:Meat,
     15:Onions,
     16:Corn}
    
    if sauce_choice in input_to_sauce.keys():
      sauce = input_to_sauce[sauce_choice](pizza)
    else:
      print('Please enter the number between 11 and 16')
    
    #Calculate the total cost of the pizza and sauce
    total_cost = sauce.get_cost()
    
    #Get the user's information
    user_name = input("Please enter your name: ")
    id_number = input("Please enter your ID number: ")
    cc_number = input("Please enter your credit card number: ")
    cc_password = input("Please enter your credit card password: ")

    #Write the order information to the Orders_Database.csv file
    with open("Orders_Database.csv", mode="a", newline="") as file:
      writer = csv.writer(file)
      now = datetime.datetime.now()
      timestamp = now.strftime("%Y-%m-%d %H:%M:%S")
      order_info = [user_name, id_number, cc_number, sauce.get_description(), total_cost,  timestamp,  cc_password]
      writer.writerow(order_info)
    
    #Print the order details and total cost
    print(f"Thank you for your order, {user_name}!")
    print("Here's your order details:")
    print(f"Your pizza base and sauce : {sauce.get_description()}  -> Your total order amount is ${total_cost:.2f}")

# Call the main function  
main()

"""*You can see the data in csv file """

#Create table using pandas
import pandas as pd
data = pd.read_csv('Orders_Database.csv', names=['Name', 'ID', 'Credit Card Number', 'Order Description', 'Price', 'Date and Time', 'Credit Card Password'])
data